---
- name: '{{ ipfs_app.name }} {{ ipfs_app.version }}: resolving vars'
  include_vars:
    file: install-vars.yml
- name: '{{ ipfs_app.name }} {{ ipfs_app.version }}: checking for installation in {{ ipfs_install_dir }}'
  become: yes
  stat:
    path: '{{ ipfs_install_dir }}'
  changed_when: False
  register: ipfs_bindir
- when: not ipfs_bindir.stat.exists
  block:
    - name: '{{ ipfs_app.name }} {{ ipfs_app.version }}: downloading {{ ipfs_tgz_url }} to {{ ipfs_tmp_tgz }}'
      become: yes
      become_user: root
      get_url:
        url: '{{ ipfs_tgz_url }}'
        dest: '{{ ipfs_tmp_tgz }}'
        checksum: '{{ ipfs_checksum }}'
        mode: 0644
    - name: '{{ ipfs_app.name }} {{ ipfs_app.version }}: mkdir {{ ipfs_install_dir }}'
      become: yes
      become_user: root
      file:
        path: '{{ ipfs_install_dir }}'
        state: directory
        mode: 0755
    - name: '{{ ipfs_app.name }} {{ ipfs_app.version }}: unarchiving {{ ipfs_tmp_tgz }} into {{ ipfs_install_dir }}'
      become: yes
      become_user: root
      unarchive:
        remote_src: yes
        src: '{{ ipfs_tmp_tgz }}'
        dest: '{{ ipfs_install_dir }}'
        creates: '{{ ipfs_install_subdir }}'
  always:
    - name: '{{ ipfs_app.name }} {{ ipfs_app.version }}: rm {{ ipfs_tmp_tgz }}'
      become: yes
      become_user: root
      file:
        path: '{{ ipfs_tmp_tgz }}'
        state: absent
- name: '{{ ipfs_app.name }} {{ ipfs_app.version }}: linking {{ ipfs_link}} to {{ ipfs_exe }}'
  become: yes
  become_user: root
  file:
    src: '{{ ipfs_exe }}'
    dest: '{{ ipfs_link }}'
    state: link
